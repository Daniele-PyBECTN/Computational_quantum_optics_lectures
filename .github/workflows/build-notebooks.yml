name: Sync Notebooks

on:
  push:
    branches: [ main ]
    paths:
      - 'notebooks/**/*.qmd'
      - 'requirements.txt'
      - 'apt.txt'
      - 'postBuild'
      - '.jupyter/**'
      - '.github/workflows/build-notebooks.yml'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1 Checkout main
      - name: Checkout main
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2 Setup Quarto
      - name: Setup Quarto
        uses: quarto-dev/quarto-actions/setup@v2

      - name: Install Python deps from requirements.txt
        run: pip install -r requirements.txt

      # 3 Convert QMD → IPYNB
      - name: Convert QMD → IPYNB
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          for src in notebooks/**/*.qmd; do
            quarto render "$src" --to ipynb
          done

      # 4 Checkout notebooks branch into `branch-out/`
      - name: Checkout notebooks branch
        uses: actions/checkout@v4
        with:
          ref: notebooks
          path: branch-out
          fetch-depth: 0

      # 5 (Optional) Prune stale files
      # This looks at every tracked notebooks/*.ipynb, checks whether ../notebooks/*.qmd still exists in main, and removes it from the index if not.
      - name: Remove stale notebooks
        run: |
          cd branch-out
          git ls-files "notebooks/*.ipynb" | while read ipynb; do
            src="../${ipynb%.ipynb}.qmd"
            if [ ! -f "$src" ]; then
              git rm --ignore-unmatch "$ipynb"
            fi
          done
          cd ..
      # 6 Copy the converted notebooks + helper files
      - name: Copy artifacts
        run: |
          # helper files at root
          cp requirements.txt apt.txt postBuild branch-out/ 2>/dev/null || true
          cp -r .jupyter    branch-out/ 2>/dev/null || true

          # notebooks into the notebooks/ subfolder
          mkdir -p branch-out/notebooks
          cp notebooks/*.ipynb branch-out/notebooks/

      # 7 Commit & push
      - name: Commit & Push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cd branch-out
          git config user.name  "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add .
          if git diff --cached --quiet; then
            echo "✅ No changes to push"
          else
            git commit -m "ci: update notebooks from ${{ github.sha }}"
            git push origin notebooks
          fi